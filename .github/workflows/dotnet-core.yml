name: .NET Core

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ${{matrix.os}}
    name: ${{matrix.suffix}}
    strategy:
      matrix:
        include:
          - os: ubuntu-16.04
            suffix: ubuntu-16.04
            z3: z3-4.8.5-x64-ubuntu-16.04
            chmod: true
            coverage: true
          - os: windows-2019
            suffix: win
            z3: z3-4.8.5-x64-win
            chmod: false
            coverage: false
          - os: macos-10.15
            suffix: osx-10.14.1
            z3: z3-4.8.5-x64-osx-10.14.2
            chmod: true
            coverage: false
    env:
      publishPath: publish
      testPath: Source/DafnyLS.IntegrationTest/bin/Debug/netcoreapp3.1
      solutionPath: Source/DafnyLS.sln
      z3BaseUri: https://github.com/Z3Prover/z3/releases/download/z3-4.8.5
      coverageFile: coverage.cobertura.xml
    outputs:
      binaries: ${{env.publishPath}}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x
    - name: Install dependencies
      run: dotnet restore ${{env.solutionPath}}
    - name: Build
      run: dotnet build --configuration Release --no-restore ${{env.solutionPath}}
    - name: Load Z3
      shell: pwsh
      run: |
        Invoke-WebRequest ${{env.z3BaseUri}}/${{matrix.z3}}.zip -OutFile z3.zip
        Expand-Archive z3.zip .
        Remove-Item z3.zip
        Copy-Item ${{matrix.z3}} ${{env.testPath}}/z3 -Recurse
    - name: Set Permissions
      if: ${{matrix.chmod}}
      run: chmod +x ${{env.testPath}}/z3/bin/z3
    - name: Run Tests
      if: ${{!matrix.coverage}}
      run: dotnet test --no-restore --verbosity normal ${{env.solutionPath}}
    - name: Run Test Coverage
      if: ${{matrix.coverage}}
      run: |
        dotnet test --no-restore --verbosity normal --settings Source/DafnyLS.IntegrationTest/coverlet.runsettings ${{env.solutionPath}}
        mv Source/DafnyLS.IntegrationTest/TestResults/*/${{env.coverageFile}} ./${{env.coverageFile}}
    - name: Upload Coverage Report
      if: ${{matrix.coverage}}
      uses: codecov/codecov-action@v1
      with:
        file: ./${{env.coverageFile}}
    - name: Prepare Artifacts
      if: ${{github.ref == 'refs/heads/master'}}
      shell: pwsh
      run: |
        dotnet publish --configuration Release --no-restore -p:SatelliteResourceLanguages=en --output ${{env.publishPath}} dafny/Source/DafnyDriver/DafnyDriver.csproj
        dotnet publish --configuration Release --no-restore -p:SatelliteResourceLanguages=en --output ${{env.publishPath}} Source/DafnyLS/DafnyLS.csproj
        Copy-Item ${{matrix.z3}} ${{env.publishPath}}/z3 -Recurse
    - name: Upload Artifacts
      if: ${{github.ref == 'refs/heads/master'}}
      uses: actions/upload-artifact@v2
      with:
        name: DafnyLS-${{matrix.suffix}}
        path: ${{env.publishPath}}/
